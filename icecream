#include <iostream>
using namespace std;

class IceCream {
public:
    struct Node {
        int data;
        Node* next;
    } *head;

    IceCream() : head(nullptr) {}

    void insertNode() {
        int item;
        cout << "Enter Roll No: ";
        cin >> item;
        Node* temp = new Node{item, nullptr};
        if (!head) head = temp;
        else {
            Node* ptr = head;
            while (ptr->next) ptr = ptr->next;
            ptr->next = temp;
        }
    }

    void display() {
        Node* ptr = head;
        while (ptr) {
            cout << ptr->data << " -> ";
            ptr = ptr->next;
        }
        cout << "NULL" << endl;
    }

    void findIntersection(IceCream& other) {
        cout << "Intersection: ";
        for (Node* ptrA = head; ptrA; ptrA = ptrA->next) {
            for (Node* ptrB = other.head; ptrB; ptrB = ptrB->next) {
                if (ptrA->data == ptrB->data) {
                    cout << ptrA->data << " ";
                    break;
                }
            }
        }
        cout << endl;
    }

    void findUnion(IceCream& other) {
        cout << "Union: ";
        for (Node* ptrA = head; ptrA; ptrA = ptrA->next) {
            cout << ptrA->data << " ";
        }
        for (Node* ptrB = other.head; ptrB; ptrB = ptrB->next) {
            bool found = false;
            for (Node* ptrA = head; ptrA; ptrA = ptrA->next) {
                if (ptrA->data == ptrB->data) {
                    found = true;
                    break;
                }
            }
            if (!found) cout << ptrB->data << " ";
        }
        cout << endl;
    }

    int countNeither(int totalStudents) {
        int count = 0;
        for (int i = 1; i <= totalStudents; i++) {
            bool foundA = false, foundB = false;
            for (Node* ptrA = head; ptrA; ptrA = ptrA->next) if (ptrA->data == i) foundA = true;
            for (Node* ptrB = head; ptrB; ptrB = ptrB->next) if (ptrB->data == i) foundB = true;
            if (!foundA && !foundB) count++;
        }
        return count;
    }
};

int main() {
    IceCream vanilla, butterscotch;
    
    cout << "Enter students who like Vanilla Ice Cream (5 students):" << endl;
    for (int i = 0; i < 5; i++) vanilla.insertNode();
    vanilla.display();

    cout << "Enter students who like Butterscotch Ice Cream (5 students):" << endl;
    for (int i = 0; i < 5; i++) butterscotch.insertNode();
    butterscotch.display();

    vanilla.findIntersection(butterscotch);
    vanilla.findUnion(butterscotch);
    
    int totalStudents = 10;
    cout << "Number of students who like neither flavor: " << vanilla.countNeither(totalStudents) << endl;

    return 0;
}
