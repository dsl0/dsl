#include <iostream>
using namespace std;

class Node {
public:
    char name[10];
    long prn;
    Node* next;
    Node(long prn = 0, const char* name = "") : prn(prn), next(nullptr) {
        strncpy(this->name, name, 10);
    }
};

class List {
private:
    Node* head;
    int count;

public:
    List() : head(nullptr), count(0) {}

    void addMember() {
        Node* newNode = new Node();
        cout << "Enter Member name: ";
        cin >> newNode->name;
        cout << "Enter PRN of Member: ";
        cin >> newNode->prn;

        if (!head || head->prn > newNode->prn) {
            newNode->next = head;
            head = newNode;
        } else {
            Node* temp = head;
            while (temp->next && temp->next->prn < newNode->prn)
                temp = temp->next;
            newNode->next = temp->next;
            temp->next = newNode;
        }
        count++;
    }

    void removeMember() {
        if (!head) { cout << "No members to remove!" << endl; return; }
        long prnToRemove;
        cout << "Enter PRN of member to remove: ";
        cin >> prnToRemove;

        if (head->prn == prnToRemove) {
            Node* temp = head;
            head = head->next;
            delete temp;
        } else {
            Node* temp = head;
            while (temp->next && temp->next->prn != prnToRemove) temp = temp->next;
            if (temp->next) {
                Node* toDelete = temp->next;
                temp->next = temp->next->next;
                delete toDelete;
            } else cout << "Member not found!" << endl;
        }
        count--;
    }

    void displayList() const {
        Node* temp = head;
        while (temp) {
            cout << "Name: " << temp->name << ", PRN: " << temp->prn << endl;
            temp = temp->next;
        }
    }

    void displayReverse(Node* node) const {
        if (node) {
            displayReverse(node->next);
            cout << "Name: " << node->name << ", PRN: " << node->prn << endl;
        }
    }

    void displayCount() const { cout << "Member count: " << count << endl; }
};

int main() {
    List list;
    int choice;

    while (true) {
        cout << "\nMenu:\n1. Add Member\n2. Remove Member\n3. Display Count\n4. Display Members\n5. Display Reverse\n6. Exit\nEnter choice: ";
        cin >> choice;
        
        switch (choice) {
        case 1: list.addMember(); break;
        case 2: list.removeMember(); break;
        case 3: list.displayCount(); break;
        case 4: list.displayList(); break;
        case 5: list.displayReverse(list.head); break;
        case 6: return 0;
        default: cout << "Invalid choice!\n"; break;
        }
    }
}
