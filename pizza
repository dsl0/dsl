#include <iostream>
using namespace std;
const int MAX = 5;

// Order Class
class Order {
    int order_id;
    char orderer_name[10];
public:
    void acceptOrder() {
        cout << "\nEnter Order ID: ";
        cin >> order_id;
        cout << "Enter Orderer Name: ";
        cin >> orderer_name;
    }
    void displayOrder() const {
        cout << "\n\t" << order_id << "\t\t" << orderer_name;
    }
    friend class Queue;
};

// Queue Class
class Queue {
    Order data[MAX];
    int front, rear;
public:
    Queue() : front(-1), rear(-1) {}

    bool isFull() const {
        return (front == 0 && rear == MAX - 1) || (front == rear + 1);
    }

    bool isEmpty() const {
        return front == -1;
    }

    void enqueue() {
        if (isFull()) {
            cout << "\nQueue is Full! Cannot place order.";
            return;
        }
        Order temp;
        temp.acceptOrder();
        if (rear == MAX - 1 && front != 0) {
            rear = -1;
        }
        data[++rear] = temp;
        if (front == -1) {
            front = 0;
        }
        cout << "\nOrder placed successfully!";
    }

    void dequeue() {
        if (isEmpty()) {
            cout << "\nNo orders to serve!";
            return;
        }
        cout << "\nOrder served successfully!";
        if (front == rear) {  // Last element served
            front = rear = -1;
        } else if (front == MAX - 1) {
            front = 0;  // Wrap-around
        } else {
            front++;
        }
    }

    void display() const {
        if (isEmpty()) {
            cout << "\nNo orders to display!";
            return;
        }
        cout << "\n\t----------- Orders in Queue -------------";
        cout << "\n\n\tOrder ID\tOrderer Name";
        cout << "\n\t-----------------------------------------";

        int i = front;
        while (true) {
            data[i].displayOrder();
            if (i == rear) break;
            i = (i + 1) % MAX;  // Wrap-around
        }
    }
};

// Main Function
int main() {
    Queue q;
    int ch;

    cout << "\n-------------- Pizza Parlor Menu --------------";
    cout << "\n1. Place Order";
    cout << "\n2. Serve Order";
    cout << "\n3. Display Orders";
    cout << "\n4. Exit";

    do {
        cout << "\n--------------------------------------";
        cout << "\nEnter your choice: ";
        cin >> ch;
        cout << "\n--------------------------------------";

        switch (ch) {
            case 1:
                q.enqueue();
                break;
            case 2:
                q.dequeue();
                break;
            case 3:
                q.display();
                break;
            case 4:
                cout << "\nExiting... Thank you!";
                break;
            default:
                cout << "\nInvalid choice! Please try again.";
        }
    } while (ch != 4);

    return 0;
}
